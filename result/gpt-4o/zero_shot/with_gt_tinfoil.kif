(role flipper)
(role caller)

(init (step 0))
(init (score flipper 0))
(init (score caller 0))

(<= (legal ?player heads) (role ?player))
(<= (legal ?player tails) (role ?player))
(<= (legal ?player neither) (role ?player))

(<= (next (step ?next)) (true (step ?current)) (succ ?current ?next))

(<= (next (score flipper ?newScore))
    (true (score flipper ?currentScore))
    (does flipper ?action)
    (does caller ?action)
    (not (does flipper neither))
    (not (does caller neither))
    (add ?currentScore 0 ?newScore))

(<= (next (score caller ?newScore))
    (true (score caller ?currentScore))
    (does flipper ?action)
    (does caller ?action)
    (not (does flipper neither))
    (not (does caller neither))
    (add ?currentScore 10 ?newScore))

(<= (next (score flipper ?newScore))
    (true (score flipper ?currentScore))
    (does flipper ?action1)
    (does caller ?action2)
    (distinct ?action1 ?action2)
    (not (does flipper neither))
    (not (does caller neither))
    (add ?currentScore 10 ?newScore))

(<= (next (score caller ?newScore))
    (true (score caller ?currentScore))
    (does flipper ?action1)
    (does caller ?action2)
    (distinct ?action1 ?action2)
    (not (does flipper neither))
    (not (does caller neither))
    (add ?currentScore 0 ?newScore))

(<= (next (score flipper ?newScore))
    (true (score flipper ?currentScore))
    (does flipper neither)
    (does caller neither)
    (add ?currentScore 1 ?newScore))

(<= (next (score caller ?newScore))
    (true (score caller ?currentScore))
    (does flipper neither)
    (does caller neither)
    (add ?currentScore 1 ?newScore))

(<= (next (score flipper ?newScore))
    (true (score flipper ?currentScore))
    (does flipper neither)
    (not (does caller neither))
    (add ?currentScore 9 ?newScore))

(<= (next (score caller ?newScore))
    (true (score caller ?currentScore))
    (does flipper neither)
    (not (does caller neither))
    (add ?currentScore 1 ?newScore))

(<= (next (score flipper ?newScore))
    (true (score flipper ?currentScore))
    (not (does flipper neither))
    (does caller neither)
    (add ?currentScore 1 ?newScore))

(<= (next (score caller ?newScore))
    (true (score caller ?currentScore))
    (not (does flipper neither))
    (does caller neither)
    (add ?currentScore 9 ?newScore))

(<= terminal (true (step 10)))

(<= (goal flipper ?score)
    (true (score flipper ?score)))

(<= (goal caller ?score)
    (true (score caller ?score)))

(succ 0 1)
(succ 1 2)
(succ 2 3)
(succ 3 4)
(succ 4 5)
(succ 5 6)
(succ 6 7)
(succ 7 8)
(succ 8 9)
(succ 9 10)

(add 0 0 0)
(add 0 1 1)
(add 0 9 9)
(add 0 10 10)
(add 1 0 1)
(add 1 1 2)
(add 1 9 10)
(add 1 10 11)
(add 9 0 9)
(add 9 1 10)
(add 9 9 18)
(add 9 10 19)
(add 10 0 10)
(add 10 1 11)
(add 10 9 19)
(add 10 10 20)