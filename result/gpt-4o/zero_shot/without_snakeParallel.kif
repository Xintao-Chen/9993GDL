(role snake)

(init (step 0))
(init (head 1 1))
(init (body 2 1))
(init (body 1 1))

(<= (legal snake up) (not (at-top-boundary)))
(<= (legal snake down) (not (at-bottom-boundary)))
(<= (legal snake left) (not (at-left-boundary)))
(<= (legal snake right) (not (at-right-boundary)))
(<= (legal snake noop) (not (any-move-legal)))

(<= (at-top-boundary) (head ?x 1))
(<= (at-bottom-boundary) (head ?x 4))
(<= (at-left-boundary) (head 1 ?y))
(<= (at-right-boundary) (head 4 ?y))

(<= (any-move-legal)
    (or (legal snake up)
        (legal snake down)
        (legal snake left)
        (legal snake right)))

(<= (next (step ?n))
    (true (step ?m))
    (succ ?m ?n))

(<= (next (head ?x ?y))
    (does snake up)
    (true (head ?x ?y1))
    (succ ?y ?y1))

(<= (next (head ?x ?y))
    (does snake down)
    (true (head ?x ?y1))
    (succ ?y1 ?y))

(<= (next (head ?x ?y))
    (does snake left)
    (true (head ?x1 ?y))
    (succ ?x ?x1))

(<= (next (head ?x ?y))
    (does snake right)
    (true (head ?x1 ?y))
    (succ ?x1 ?x))

(<= (next (body ?x ?y))
    (true (head ?x ?y)))

(<= (next (body ?x ?y))
    (true (body ?x1 ?y1))
    (not (true (head ?x1 ?y1)))
    (succ ?x1 ?x)
    (succ ?y1 ?y))

(<= (collision)
    (true (head ?x ?y))
    (true (body ?x ?y)))

(<= (terminal)
    (collision))

(<= (terminal)
    (true (step 20)))

(<= (goal snake 100)
    (not (open-cell)))

(<= (goal snake 0)
    (open-cell))

(<= (open-cell)
    (not (occupied ?x ?y))
    (grid ?x ?y))

(<= (occupied ?x ?y)
    (true (head ?x ?y)))

(<= (occupied ?x ?y)
    (true (body ?x ?y)))

(grid 1 1)
(grid 1 2)
(grid 1 3)
(grid 1 4)
(grid 2 1)
(grid 2 2)
(grid 2 3)
(grid 2 4)
(grid 3 1)
(grid 3 2)
(grid 3 3)
(grid 3 4)
(grid 4 1)
(grid 4 2)
(grid 4 3)
(grid 4 4)

(succ 0 1)
(succ 1 2)
(succ 2 3)
(succ 3 4)
(succ 4 5)