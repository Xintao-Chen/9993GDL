(role white)
(role black)

(init (control white))
(init (cell 1 1 white))
(init (cell 2 1 white))
(init (cell 3 1 white))
(init (cell 4 1 white))
(init (cell 5 1 white))
(init (cell 6 1 white))
(init (cell 7 1 white))
(init (cell 8 1 white))
(init (cell 1 2 white))
(init (cell 2 2 white))
(init (cell 3 2 white))
(init (cell 4 2 white))
(init (cell 5 2 white))
(init (cell 6 2 white))
(init (cell 7 2 white))
(init (cell 8 2 white))
(init (cell 1 7 black))
(init (cell 2 7 black))
(init (cell 3 7 black))
(init (cell 4 7 black))
(init (cell 5 7 black))
(init (cell 6 7 black))
(init (cell 7 7 black))
(init (cell 8 7 black))
(init (cell 1 8 black))
(init (cell 2 8 black))
(init (cell 3 8 black))
(init (cell 4 8 black))
(init (cell 5 8 black))
(init (cell 6 8 black))
(init (cell 7 8 black))
(init (cell 8 8 black))

(<= (legal white (move X1 Y1 X2 Y2))
    (true (control white))
    (true (cell X1 Y1 white))
    (knight_move X1 Y1 X2 Y2)
    (not (true (cell X2 Y2 white))))

(<= (legal black (move X1 Y1 X2 Y2))
    (true (control black))
    (true (cell X1 Y1 black))
    (knight_move X1 Y1 X2 Y2)
    (not (true (cell X2 Y2 black))))

(<= (legal white noop)
    (true (control white)))

(<= (legal black noop)
    (true (control black)))

(<= (knight_move X1 Y1 X2 Y2)
    (or (and (add X1 2 X2) (add Y1 1 Y2))
        (and (add X1 2 X2) (subtract Y1 1 Y2))
        (and (subtract X1 2 X2) (add Y1 1 Y2))
        (and (subtract X1 2 X2) (subtract Y1 1 Y2))
        (and (add X1 1 X2) (add Y1 2 Y2))
        (and (add X1 1 X2) (subtract Y1 2 Y2))
        (and (subtract X1 1 X2) (add Y1 2 Y2))
        (and (subtract X1 1 X2) (subtract Y1 2 Y2)))
    (<= (between 1 X 8))
    (<= (between 1 Y 8)))

(<= (next (cell X Y white))
    (does white (move X1 Y1 X Y))
    (true (cell X1 Y1 white)))

(<= (next (cell X Y black))
    (does black (move X1 Y1 X Y))
    (true (cell X1 Y1 black)))

(<= (next (cell X Y piece))
    (true (cell X Y piece))
    (not (does white (move X Y _ _)))
    (not (does black (move X Y _ _))))

(<= (next (control black))
    (true (control white))
    (does white (move _ _ _ _)))

(<= (next (control white))
    (true (control black))
    (does black (move _ _ _ _)))

(<= (terminal)
    (or (exists X (true (cell X 8 white)))
        (exists X (true (cell X 1 black)))
        (not (exists X Y (true (cell X Y white))))
        (not (exists X Y (true (cell X Y black)))))

(<= (goal white 100)
    (terminal)
    (or (exists X (true (cell X 8 white)))
        (not (exists X Y (true (cell X Y black)))))

(<= (goal black 100)
    (terminal)
    (or (exists X (true (cell X 1 black)))
        (not (exists X Y (true (cell X Y white)))))

(<= (goal white 0)
    (goal black 100))

(<= (goal black 0)
    (goal white 100))