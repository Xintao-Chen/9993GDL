(role snake)

(index 1)
(index 2)
(index 3)
(index 4)

(init (stepCount 0))
(init (snakeHead 1 1))
(init (snakeBody 2 1))

(<= (legal snake up)
    (true (snakeHead ?x ?y))
    (index ?x)
    (index ?y)
    (not (true (snakeHead ?x 1))))
(<= (legal snake down)
    (true (snakeHead ?x ?y))
    (index ?x)
    (index ?y)
    (not (true (snakeHead ?x 4))))
(<= (legal snake left)
    (true (snakeHead ?x ?y))
    (index ?x)
    (index ?y)
    (not (true (snakeHead 1 ?y))))
(<= (legal snake right)
    (true (snakeHead ?x ?y))
    (index ?x)
    (index ?y)
    (not (true (snakeHead 4 ?y))))
(<= (legal snake noop)
    (not (legal snake up))
    (not (legal snake down))
    (not (legal snake left))
    (not (legal snake right)))

(<= (next (snakeHead ?newX ?newY))
    (does snake up)
    (true (snakeHead ?x ?y))
    (succ ?newY ?y)
    (index ?x)
    (index ?newY))
(<= (next (snakeHead ?newX ?newY))
    (does snake down)
    (true (snakeHead ?x ?y))
    (succ ?y ?newY)
    (index ?x)
    (index ?newY))
(<= (next (snakeHead ?newX ?newY))
    (does snake left)
    (true (snakeHead ?x ?y))
    (succ ?newX ?x)
    (index ?newX)
    (index ?y))
(<= (next (snakeHead ?newX ?newY))
    (does snake right)
    (true (snakeHead ?x ?y))
    (succ ?x ?newX)
    (index ?newX)
    (index ?y))
(<= (next (snakeHead ?x ?y))
    (does snake noop)
    (true (snakeHead ?x ?y)))

(<= (next (snakeBody ?x ?y))
    (true (snakeHead ?x ?y)))
(<= (next (snakeBody ?x ?y))
    (true (snakeBody ?x ?y))
    (not (true (snakeHead ?x ?y))))

(<= (next (stepCount ?nextStep))
    (true (stepCount ?currentStep))
    (succ ?currentStep ?nextStep))

(<= terminal
    (true (stepCount 20)))
(<= terminal
    (collision))

(<= (goal snake 100)
    (not open))
(<= (goal snake 0)
    open)

(<= open
    (index ?x)
    (index ?y)
    (not (true (snakeHead ?x ?y)))
    (not (true (snakeBody ?x ?y))))

(<= collision
    (true (snakeHead ?x ?y))
    (true (snakeBody ?x ?y)))

(succ 1 2)
(succ 2 3)
(succ 3 4)