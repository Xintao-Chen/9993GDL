(role player1)
(role player2)

(heap a)
(heap b)
(heap c)
(heap d)

(init (control player1))
(init (items a 1))
(init (items b 5))
(init (items c 4))
(init (items d 2))

(<= (legal player1 noop)
    (true (control player2)))
(<= (legal player1 (reduce ?heap ?n))
    (true (control player1))
    (heap ?heap)
    (true (items ?heap ?m))
    (succ ?n ?_)
    (less ?n ?m))
(<= (legal player2 noop)
    (true (control player1)))
(<= (legal player2 (reduce ?heap ?n))
    (true (control player2))
    (heap ?heap)
    (true (items ?heap ?m))
    (succ ?n ?_)
    (less ?n ?m))

(<= (next (items ?heap ?new))
    (role ?player)
    (does ?player (reduce ?heap ?n))
    (true (items ?heap ?m))
    (plus ?new ?n ?m))
(<= (next (items ?heap ?m))
    (true (items ?heap ?m))
    (not (does ?player (reduce ?heap ?n))))
(<= (next (control player1))
    (true (control player2)))
(<= (next (control player2))
    (true (control player1)))

(<= terminal
    (forall ?heap (true (items ?heap 0))))

(<= (goal player1 100)
    (true (control player2))
    terminal)
(<= (goal player1 0)
    (true (control player1))
    terminal)
(<= (goal player2 100)
    (true (control player1))
    terminal)
(<= (goal player2 0)
    (true (control player2))
    terminal)

(<= (less ?x ?y)
    (succ ?x ?z)
    (less ?z ?y))
(<= (less 0 ?y)
    (succ 0 ?y))

(succ 0 1)
(succ 1 2)
(succ 2 3)
(succ 3 4)
(succ 4 5)
(succ 5 6)
(succ 6 7)
(succ 7 8)
(succ 8 9)
(succ 9 10)