(role black)
(role white)

(index 1)
(index 2)
(index 3)
(index 4)
(index 5)
(index 6)
(index 7)

(init (control black))

(<= (legal black noop)
    (true (control white)))
(<= (legal black (play ?i ?j))
    (true (control black))
    (emptyCell ?i ?j))
(<= (legal white noop)
    (true (control black)))
(<= (legal white (play ?i ?j))
    (true (control white))
    (emptyCell ?i ?j))

(<= (next (stone ?i ?j black))
    (does black (play ?i ?j)))
(<= (next (stone ?i ?j white))
    (does white (play ?i ?j)))
(<= (next (stone ?i ?j ?color))
    (true (stone ?i ?j ?color)))

(<= (next (control black))
    (true (control white)))
(<= (next (control white))
    (true (control black)))

(<= terminal
    (captured black))
(<= terminal
    (captured white))

(<= (goal black 100)
    (captured white))
(<= (goal black 0)
    (captured black))
(<= (goal black 50)
    (not (captured black))
    (not (captured white)))

(<= (goal white 100)
    (captured black))
(<= (goal white 0)
    (captured white))
(<= (goal white 50)
    (not (captured black))
    (not (captured white)))

(<= (captured ?color)
    (group ?i ?j ?color)
    (not (liberty ?i ?j)))

(<= (group ?i ?j ?color)
    (true (stone ?i ?j ?color))
    (connected ?i ?j ?color))

(<= (connected ?i ?j ?color)
    (adjacent ?i ?j ?k ?l)
    (true (stone ?k ?l ?color)))

(<= (liberty ?i ?j)
    (adjacent ?i ?j ?k ?l)
    (emptyCell ?k ?l))

(<= (adjacent ?i ?j ?k ?j)
    (index ?i)
    (index ?k)
    (succ ?i ?k))
(<= (adjacent ?i ?j ?i ?l)
    (index ?j)
    (index ?l)
    (succ ?j ?l))

(<= (emptyCell ?i ?j)
    (index ?i)
    (index ?j)
    (not (true (stone ?i ?j black)))
    (not (true (stone ?i ?j white))))

(succ 1 2)
(succ 2 3)
(succ 3 4)
(succ 4 5)
(succ 5 6)
(succ 6 7)