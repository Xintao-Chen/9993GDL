(role player1)
(role player2)

(init (control player1))
(init (heap a 12))
(init (heap b 12))
(init (heap c 20))
(init (heap d 20))

(<= (legal player1 noop)
    (true (control player2)))
(<= (legal player1 (reduce ?heap ?n))
    (true (control player1))
    (true (heap ?heap ?m))
    (succ ?n ?m))
(<= (legal player2 noop)
    (true (control player1)))
(<= (legal player2 (reduce ?heap ?n))
    (true (control player2))
    (true (heap ?heap ?m))
    (succ ?n ?m))

(<= (next (heap ?heap ?newM))
    (role ?player)
    (does ?player (reduce ?heap ?n))
    (true (heap ?heap ?m))
    (plus ?newM ?n ?m))
(<= (next (heap ?heap ?m))
    (true (heap ?heap ?m))
    (role ?player)
    (does ?player noop))
(<= (next (control player1))
    (true (control player2)))
(<= (next (control player2))
    (true (control player1)))

(<= terminal
    (not (openHeap)))

(<= (goal player1 100)
    (true (control player1))
    (not (openHeap)))
(<= (goal player1 0)
    (true (control player2))
    (not (openHeap)))
(<= (goal player2 100)
    (true (control player2))
    (not (openHeap)))
(<= (goal player2 0)
    (true (control player1))
    (not (openHeap)))

(<= (openHeap)
    (true (heap ?heap ?m))
    (succ 0 ?m))

(<= (succ 0 1))
(<= (succ 1 2))
(<= (succ 2 3))
(<= (succ 3 4))
(<= (succ 4 5))
(<= (succ 5 6))
(<= (succ 6 7))
(<= (succ 7 8))
(<= (succ 8 9))
(<= (succ 9 10))
(<= (succ 10 11))
(<= (succ 11 12))
(<= (succ 12 13))
(<= (succ 13 14))
(<= (succ 14 15))
(<= (succ 15 16))
(<= (succ 16 17))
(<= (succ 17 18))
(<= (succ 18 19))
(<= (succ 19 20))

(<= (plus ?x 0 ?x))
(<= (plus ?x ?y ?z)
    (succ ?y ?z))