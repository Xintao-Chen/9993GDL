(role robot)
(init (light p off))
(init (light q off))
(init (light r off))
(init (step 1))

(<= (legal robot a) (true (step ?s)))
(<= (legal robot b) (true (step ?s)))
(<= (legal robot c) (true (step ?s)))

(<= (next (light p on))
    (does robot a)
    (true (light p off)))
(<= (next (light p off))
    (does robot a)
    (true (light p on)))
(<= (next (light q on))
    (does robot a)
    (true (light q off)))
(<= (next (light q off))
    (does robot a)
    (true (light q on)))
(<= (next (light r on))
    (does robot a)
    (true (light r off)))
(<= (next (light r off))
    (does robot a)
    (true (light r on)))

(<= (next (light p ?state))
    (does robot b)
    (true (light q ?state)))
(<= (next (light q ?state))
    (does robot b)
    (true (light p ?state)))
(<= (next (light r ?state))
    (does robot b)
    (true (light r ?state)))

(<= (next (light p ?state))
    (does robot c)
    (true (light p ?state)))
(<= (next (light q ?state))
    (does robot c)
    (true (light r ?state)))
(<= (next (light r ?state))
    (does robot c)
    (true (light q ?state)))

(<= (next (step ?next))
    (true (step ?s))
    (succ ?s ?next))

(<= terminal
    (true (step 7)))
(<= terminal
    (true (light p on))
    (true (light q on))
    (true (light r on)))

(<= (goal robot 100)
    (true (light p on))
    (true (light q on))
    (true (light r on)))
(<= (goal robot 0)
    (or (not (true (light p on)))
        (not (true (light q on)))
        (not (true (light r on)))))

(succ 1 2)
(succ 2 3)
(succ 3 4)
(succ 4 5)
(succ 5 6)
(succ 6 7)