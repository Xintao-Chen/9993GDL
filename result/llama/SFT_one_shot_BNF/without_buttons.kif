(role robot)

(index 1)
(index 2)
(index 3)

(init (light p off) (light q off) (light r off) (step 1))

(<= (legal robot a) (true))
(<= (legal robot b) (true))
(<= (legal robot c) (true))

(<= (next (light p on))
    (role robot)
    (does robot (a)))
(<= (next (light q on))
    (role robot)
    (does robot (a)))
(<= (next (light r on))
    (role robot)
    (does robot (a)))
(<= (next (light p off))
    (role robot)
    (does robot (a)))
(<= (next (light q off))
    (role robot)
    (does robot (a)))
(<= (next (light r off))
    (role robot)
    (does robot (a)))

(<= (next (light p on))
    (role robot)
    (does robot (b)))
(<= (next (light q off))
    (role robot)
    (does robot (b)))
(<= (next (light p off))
    (role robot)
    (does robot (b)))
(<= (next (light q on))
    (role robot)
    (does robot (b)))

(<= (next (light p off))
    (role robot)
    (does robot (c)))
(<= (next (light q on))
    (role robot)
    (does robot (c)))
(<= (next (light r off))
    (role robot)
    (does robot (c)))
(<= (next (light p on))
    (role robot)
    (does robot (c)))
(<= (next (light q off))
    (role robot)
    (does robot (c)))
(<= (next (light r on))
    (role robot)
    (does robot (c)))

(<= (next (step 2))
    (role robot)
    (does robot (noop)))
(<= (next (step 3))
    (role robot)
    (does robot (noop)))
(<= (next (step 4))
    (role robot)
    (does robot (noop)))
(<= (next (step 5))
    (role robot)
    (does robot (noop)))
(<= (next (step 6))
    (role robot)
    (does robot (noop)))
(<= (next (step 7))
    (role robot)
    (does robot (noop)))

(<= terminal
    (and (step 7)
         (true (light p on))
         (true (light q on))
         (true (light r on))))
(<= terminal
    (and (light p on)
         (light q on)
         (light r on)))

(<= (goal robot 100)
    (terminal))
(<= (goal robot 0)
    (not (terminal)))

(<= (light?i?state)
    (index?i)
    (true (light?i?state)))

(<= (on?i)
    (index?i)
    (light?i on))
(<= (off?i)
    (index?i)
    (light?i off))

(<= (allOn)
    (on p)
    (on q)
    (on r))