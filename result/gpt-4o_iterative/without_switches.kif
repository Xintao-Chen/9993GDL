(role red)
(role white)
(role blue)

(init (state off))
(init (state red))
(init (state dim))
(init (state start))
(init (control red))

(<= (legal red noop)
    (true (control white)))
(<= (legal red noop)
    (true (control blue)))
(<= (legal red a)
    (true (control red)))
(<= (legal red b)
    (true (control red)))

(<= (legal white noop)
    (true (control red)))
(<= (legal white noop)
    (true (control blue)))
(<= (legal white c)
    (true (control white)))
(<= (legal white d)
    (true (control white)))

(<= (legal blue noop)
    (true (control red)))
(<= (legal blue noop)
    (true (control white)))
(<= (legal blue e)
    (true (control blue)))
(<= (legal blue f)
    (true (control blue)))

(<= (next (state on))
    (does red a)
    (true (state off)))
(<= (next (state off))
    (does red b)
    (true (state on)))
(<= (next (state green))
    (does white c)
    (true (state red)))
(<= (next (state red))
    (does white d)
    (true (state green)))
(<= (next (state bright))
    (does blue e)
    (true (state dim)))
(<= (next (state dim))
    (does blue f)
    (true (state bright)))

(<= (next (state end))
    (true (state start)))

(<= (next (control white))
    (true (control red)))
(<= (next (control blue))
    (true (control white)))
(<= (next (control red))
    (true (control blue)))

(<= terminal
    (true (state end)))

(<= (goal red 100)
    (true (state on)))
(<= (goal red 0)
    (not (true (state on))))
(<= (goal white 100)
    (true (state green)))
(<= (goal white 0)
    (not (true (state green))))
(<= (goal blue 100)
    (true (state bright)))
(<= (goal blue 0)
    (not (true (state bright))))