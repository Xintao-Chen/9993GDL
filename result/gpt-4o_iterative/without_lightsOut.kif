(role player)

(index 1)
(index 2)
(index 3)
(index 4)
(index 5)

(init (step 0))
(init (light 1 1))
(init (light 2 2))
(init (light 3 3))
(init (light 4 4))
(init (light 5 5))

(<= (legal player noop)
    true)
(<= (legal player (switch ?x ?y))
    (index ?x)
    (index ?y))

(<= (next (light ?x ?y))
    (index ?x)
    (index ?y)
    (does player (switch ?a ?b))
    (adjacent ?x ?y ?a ?b)
    (not (true (light ?x ?y))))
(<= (next (light ?x ?y))
    (index ?x)
    (index ?y)
    (does player (switch ?a ?b))
    (not (adjacent ?x ?y ?a ?b))
    (true (light ?x ?y)))

(<= (next (nolight ?x ?y))
    (index ?x)
    (index ?y)
    (does player (switch ?a ?b))
    (adjacent ?x ?y ?a ?b)
    (true (light ?x ?y)))
(<= (next (nolight ?x ?y))
    (index ?x)
    (index ?y)
    (does player (switch ?a ?b))
    (not (adjacent ?x ?y ?a ?b))
    (not (true (light ?x ?y))))

(<= (next (step ?next))
    (true (step ?current))
    (succ ?current ?next))

(<= terminal
    (true (step 20)))
(<= terminal
    (not (lighton)))

(<= (goal player 100)
    (not (lighton)))
(<= (goal player 0)
    (lighton))

(<= (lighton)
    (index ?x)
    (index ?y)
    (true (light ?x ?y)))

(<= (adjacent ?x1 ?y1 ?x2 ?y2)
    (index ?x1)
    (index ?y1)
    (index ?x2)
    (index ?y2)
    (or (and (succ ?x1 ?x2) (distinct ?y1 ?y2))
        (and (succ ?x2 ?x1) (distinct ?y1 ?y2))
        (and (succ ?y1 ?y2) (distinct ?x1 ?x2))
        (and (succ ?y2 ?y1) (distinct ?x1 ?x2))))

(succ 0 1)
(succ 1 2)
(succ 2 3)
(succ 3 4)
(succ 4 5)
(succ 5 6)
(succ 6 7)
(succ 7 8)
(succ 8 9)
(succ 9 10)
(succ 10 11)
(succ 11 12)
(succ 12 13)
(succ 13 14)
(succ 14 15)
(succ 15 16)
(succ 16 17)
(succ 17 18)
(succ 18 19)
(succ 19 20)