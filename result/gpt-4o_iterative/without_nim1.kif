(role player1)
(role player2)

(heap a)
(heap b)
(heap c)
(heap d)

(init (control player1))
(init (items a 1))
(init (items b 5))
(init (items c 4))
(init (items d 2))

(<= (legal ?player noop)
    (role ?player)
    (true (control ?other))
    (role ?other)
    (distinct ?player ?other))
(<= (legal ?player (reduce ?heap ?amount))
    (role ?player)
    (true (control ?player))
    (heap ?heap)
    (number ?amount)
    (true (items ?heap ?count))
    (less ?amount ?count))

(<= (next (items ?heap ?newCount))
    (role ?player)
    (does ?player (reduce ?heap ?amount))
    (true (items ?heap ?count))
    (plus ?newCount ?amount ?count))
(<= (next (items ?heap ?count))
    (heap ?heap)
    (true (items ?heap ?count))
    (role ?player)
    (not (does ?player (reduce ?heap ?amount)))
    (number ?amount))
(<= (next (control player1))
    (true (control player2)))
(<= (next (control player2))
    (true (control player1)))

(<= terminal
    (not (existsNonEmptyHeap)))

(<= (goal player1 100)
    (true (control player2))
    terminal)
(<= (goal player1 0)
    (true (control player1))
    terminal)
(<= (goal player2 100)
    (true (control player1))
    terminal)
(<= (goal player2 0)
    (true (control player2))
    terminal)

(number 1)
(number 2)
(number 3)
(number 4)
(number 5)

(<= (less ?x ?y)
    (number ?x)
    (number ?y)
    (succ ?x ?y))

(<= (plus ?sum ?x ?y)
    (number ?x)
    (number ?y)
    (succ ?x ?y)
    (number ?sum))

(<= (greater ?x ?y)
    (number ?x)
    (number ?y)
    (succ ?y ?x))

(<= existsNonEmptyHeap
    (heap ?heap)
    (true (items ?heap ?count))
    (greater ?count 0))

(succ 1 2)
(succ 2 3)
(succ 3 4)
(succ 4 5)