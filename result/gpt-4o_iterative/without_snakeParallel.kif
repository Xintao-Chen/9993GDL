(role snake)
(index 1)
(index 2)
(index 3)
(index 4)

(init (step 0))
(init (control snake))
(init (occupied 1 1))
(init (occupied 2 1))

(<= (legal snake up)
    (true (control snake))
    (true (head ?x ?y))
    (index ?x)
    (index ?y)
    (distinct ?y 1))
(<= (legal snake down)
    (true (control snake))
    (true (head ?x ?y))
    (index ?x)
    (index ?y)
    (distinct ?y 4))
(<= (legal snake left)
    (true (control snake))
    (true (head ?x ?y))
    (index ?x)
    (index ?y)
    (distinct ?x 1))
(<= (legal snake right)
    (true (control snake))
    (true (head ?x ?y))
    (index ?x)
    (index ?y)
    (distinct ?x 4))
(<= (legal snake noop)
    (not (legal snake up))
    (not (legal snake down))
    (not (legal snake left))
    (not (legal snake right)))

(<= (next (head ?newX ?newY))
    (does snake up)
    (true (head ?x ?y))
    (succ ?newY ?y)
    (true (occupied ?newX ?newY)))
(<= (next (head ?newX ?newY))
    (does snake down)
    (true (head ?x ?y))
    (succ ?y ?newY)
    (true (occupied ?newX ?newY)))
(<= (next (head ?newX ?newY))
    (does snake left)
    (true (head ?x ?y))
    (succ ?newX ?x)
    (true (occupied ?newX ?newY)))
(<= (next (head ?newX ?newY))
    (does snake right)
    (true (head ?x ?y))
    (succ ?x ?newX)
    (true (occupied ?newX ?newY)))

(<= (next (occupied ?x ?y))
    (true (head ?x ?y)))
(<= (next (occupied ?x ?y))
    (true (occupied ?x ?y))
    (not (true (head ?x ?y))))

(<= (next (step ?nextStep))
    (true (step ?currentStep))
    (succ ?currentStep ?nextStep))

(<= terminal
    (true (step 20)))
(<= terminal
    (collision))

(<= (goal snake 100)
    (not open))
(<= (goal snake 0)
    open)

(<= collision
    (true (head ?x ?y))
    (true (occupied ?x ?y)))

(<= open
    (index ?i)
    (index ?j)
    (not (true (occupied ?i ?j))))

(succ 0 1)
(succ 1 2)
(succ 2 3)
(succ 3 4)