(role player1)
(role player2)

(heap a)
(heap b)
(heap c)
(heap d)

(init (control player1))
(init (count a 2))
(init (count b 2))
(init (count c 10))
(init (count d 10))

(<= (legal player1 noop)
    (true (control player2)))
(<= (legal player1 (reduce ?heap ?n))
    (true (control player1))
    (heap ?heap)
    (number ?n)
    (true (count ?heap ?count))
    (less ?n ?count))
(<= (legal player2 noop)
    (true (control player1)))
(<= (legal player2 (reduce ?heap ?n))
    (true (control player2))
    (heap ?heap)
    (number ?n)
    (true (count ?heap ?count))
    (less ?n ?count))

(<= (next (count ?heap ?newCount))
    (does ?player (reduce ?heap ?n))
    (true (count ?heap ?count))
    (plus ?newCount ?n ?count))
(<= (next (count ?heap ?count))
    (true (count ?heap ?count))
    (not (does ?player (reduce ?heap ?n))))
(<= (next (control player1))
    (true (control player2)))
(<= (next (control player2))
    (true (control player1)))

(<= terminal
    (not (remaining)))

(<= (goal player1 100)
    (true (control player2))
    terminal)
(<= (goal player1 0)
    (true (control player1))
    terminal)
(<= (goal player2 100)
    (true (control player1))
    terminal)
(<= (goal player2 0)
    (true (control player2))
    terminal)

(<= (remaining)
    (heap ?heap)
    (true (count ?heap ?count))
    (greater ?count 0))

(<= (less ?n ?count)
    (succ ?n ?m)
    (less ?m ?count))
(<= (less 0 ?count)
    (greater ?count 0))

(<= (greater ?count 0)
    (succ 0 ?count))

(succ 0 1)
(succ 1 2)
(succ 2 3)
(succ 3 4)
(succ 4 5)
(succ 5 6)
(succ 6 7)
(succ 7 8)
(succ 8 9)
(succ 9 10)

(number 0)
(number 1)
(number 2)
(number 3)
(number 4)
(number 5)
(number 6)
(number 7)
(number 8)
(number 9)
(number 10)