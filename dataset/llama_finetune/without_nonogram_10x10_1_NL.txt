The game takes place on a 10-by-10 grid defined by coordinates where both columns and rows are indexed from 1 to 10; this grid serves as the environment in which the single player, named "robot," operates. The robot's role is to mark cells on the board, with turns taken sequentially by this sole player. Initially, no cells are marked, and the robot may choose any unmarked cell within the board boundaries to mark on its turn; the legality of marking an action is contingent upon the target cell being within the valid coordinate range and not already marked. The player’s actions are specified by indicating the column and row to mark, and when the robot executes a mark action on a particular cell, that cell’s state changes to marked in the next game state, while all previously marked cells remain marked. The game implicitly forbids marking outside the 10-by-10 grid and prohibits marking a cell that is already marked, ensuring no occupancy conflicts or out-of-bounds moves occur. Although the rules do not explicitly define a noop action, the robot can effectively pass a turn by simply not marking any new cell, as marking is the only legal action defined. The game automatically tracks groups of consecutive marked cells in each row and column, comparing these against predefined allowed group sizes specified for each row and column. Terminal conditions occur when any row or column violates these constraints—specifically, if a group of marked cells in a row or column is larger than any allowed size or if the number of groups of marked cells does not match the prescribed count for that row or column. The game ends when no such violations exist, indicating a correct marking pattern. Victory is determined by achieving a state with no invalid rows or columns, in which case the robot scores 100 points; if any invalid grouping remains, the robot scores zero. Thus, the objective is to successfully mark cells to form groups in rows and columns that exactly match the specified sizes and counts, respecting board boundaries and marking constraints, until the puzzle is correctly solved, at which point the game terminates with a perfect score for the robot.