(role white)
(role black)

(index 1)
(index 2)
(index 3)
(index 4)
(index 5)
(index 6)
(index 7)
(index 8)

(init (control white))
(init (piece white 1 1))
(init (piece white 2 1))
(init (piece white 3 1))
(init (piece white 4 1))
(init (piece white 5 1))
(init (piece white 6 1))
(init (piece white 7 1))
(init (piece white 8 1))
(init (piece white 1 2))
(init (piece white 2 2))
(init (piece white 3 2))
(init (piece white 4 2))
(init (piece white 5 2))
(init (piece white 6 2))
(init (piece white 7 2))
(init (piece white 8 2))
(init (piece black 1 7))
(init (piece black 2 7))
(init (piece black 3 7))
(init (piece black 4 7))
(init (piece black 5 7))
(init (piece black 6 7))
(init (piece black 7 7))
(init (piece black 8 7))
(init (piece black 1 8))
(init (piece black 2 8))
(init (piece black 3 8))
(init (piece black 4 8))
(init (piece black 5 8))
(init (piece black 6 8))
(init (piece black 7 8))
(init (piece black 8 8))

(<= (legal white noop)
    (true (control black)))
(<= (legal white (move ?x1 ?y1 ?x2 ?y2))
    (true (control white))
    (true (piece white ?x1 ?y1))
    (knightMove ?x1 ?y1 ?x2 ?y2)
    (not (true (piece white ?x2 ?y2))))
(<= (legal black noop)
    (true (control white)))
(<= (legal black (move ?x1 ?y1 ?x2 ?y2))
    (true (control black))
    (true (piece black ?x1 ?y1))
    (knightMove ?x1 ?y1 ?x2 ?y2)
    (not (true (piece black ?x2 ?y2))))

(<= (next (piece ?player ?x2 ?y2))
    (role ?player)
    (does ?player (move ?x1 ?y1 ?x2 ?y2)))
(<= (next (piece ?player ?x ?y))
    (true (piece ?player ?x ?y))
    (not (does ?player (move ?x ?y ?x2 ?y2))))
(<= (next (control white))
    (true (control black)))
(<= (next (control black))
    (true (control white)))

(<= terminal
    (win white))
(<= terminal
    (win black))
(<= terminal
    (not (exists (piece white ?x ?y))))
(<= terminal
    (not (exists (piece black ?x ?y))))

(<= (goal white 100)
    (win white))
(<= (goal white 0)
    (win black))
(<= (goal black 100)
    (win black))
(<= (goal black 0)
    (win white))

(<= (win white)
    (true (piece white ?x 8)))
(<= (win black)
    (true (piece black ?x 1)))

(<= (knightMove ?x1 ?y1 ?x2 ?y2)
    (index ?x1)
    (index ?y1)
    (index ?x2)
    (index ?y2)
    (or (and (succ ?x1 ?x3) (succ ?x3 ?x2) (succ ?y1 ?y4) (succ ?y4 ?y2))
        (and (succ ?x1 ?x3) (succ ?x3 ?x2) (pred ?y1 ?y4) (pred ?y4 ?y2))
        (and (pred ?x1 ?x3) (pred ?x3 ?x2) (succ ?y1 ?y4) (succ ?y4 ?y2))
        (and (pred ?x1 ?x3) (pred ?x3 ?x2) (pred ?y1 ?y4) (pred ?y4 ?y2))
        (and (succ ?y1 ?y3) (succ ?y3 ?y2) (succ ?x1 ?x4) (succ ?x4 ?x2))
        (and (succ ?y1 ?y3) (succ ?y3 ?y2) (pred ?x1 ?x4) (pred ?x4 ?x2))
        (and (pred ?y1 ?y3) (pred ?y3 ?y2) (succ ?x1 ?x4) (succ ?x4 ?x2))
        (and (pred ?y1 ?y3) (pred ?y3 ?y2) (pred ?x1 ?x4) (pred ?x4 ?x2))))

(<= (succ 1 2))
(<= (succ 2 3))
(<= (succ 3 4))
(<= (succ 4 5))
(<= (succ 5 6))
(<= (succ 6 7))
(<= (succ 7 8))

(<= (pred 2 1))
(<= (pred 3 2))
(<= (pred 4 3))
(<= (pred 5 4))
(<= (pred 6 5))
(<= (pred 7 6))
(<= (pred 8 7))