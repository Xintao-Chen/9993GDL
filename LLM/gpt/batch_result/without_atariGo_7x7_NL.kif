(role black)
(role white)

(index 1)
(index 2)
(index 3)
(index 4)
(index 5)
(index 6)
(index 7)

(init (control black))

(<= (legal black noop)
    (true (control white)))
(<= (legal black (place ?i ?j))
    (true (control black))
    (emptyCell ?i ?j))
(<= (legal white noop)
    (true (control black)))
(<= (legal white (place ?i ?j))
    (true (control white))
    (emptyCell ?i ?j))

(<= (next (stone ?i ?j ?color))
    (role ?player)
    (does ?player (place ?i ?j))
    (role ?color))
(<= (next (stone ?i ?j ?color))
    (true (stone ?i ?j ?color)))

(<= (next (control black))
    (true (control white)))
(<= (next (control white))
    (true (control black)))

(<= terminal
    (captured black))
(<= terminal
    (captured white))

(<= (goal black 100)
    (captured white))
(<= (goal black 50)
    (not (captured black))
    (not (captured white)))
(<= (goal black 0)
    (captured black))
(<= (goal white 100)
    (captured black))
(<= (goal white 50)
    (not (captured black))
    (not (captured white)))
(<= (goal white 0)
    (captured white))

(<= (group ?i ?j ?color)
    (true (stone ?i ?j ?color))
    (adjacent ?i ?j ?x ?y)
    (true (stone ?x ?y ?color)))

(<= (liberty ?i ?j)
    (index ?x)
    (index ?y)
    (adjacent ?i ?j ?x ?y)
    (emptyCell ?x ?y))

(<= (captured ?color)
    (group ?i ?j ?color)
    (not (liberty ?i ?j)))

(<= (emptyCell ?i ?j)
    (index ?i)
    (index ?j)
    (not (true (stone ?i ?j black)))
    (not (true (stone ?i ?j white))))

(<= (adjacent ?i ?j ?x ?j)
    (index ?i)
    (index ?j)
    (index ?x)
    (succ ?i ?x))
(<= (adjacent ?i ?j ?x ?j)
    (index ?i)
    (index ?j)
    (index ?x)
    (succ ?x ?i))
(<= (adjacent ?i ?j ?i ?y)
    (index ?i)
    (index ?j)
    (index ?y)
    (succ ?j ?y))
(<= (adjacent ?i ?j ?i ?y)
    (index ?i)
    (index ?j)
    (index ?y)
    (succ ?y ?j))

(<= (succ 1 2))
(<= (succ 2 3))
(<= (succ 3 4))
(<= (succ 4 5))
(<= (succ 5 6))
(<= (succ 6 7))